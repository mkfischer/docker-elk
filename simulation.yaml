version: '3.7'

services:
  synthetic-data:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9123:9123"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - monitoring-net

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring-net
    depends_on:
      - synthetic-data

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring-net
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=turtles
    volumes:
      - ./prometheus-datasource.yml:/etc/grafana/provisioning/datasources/prometheus-datasource.yml
      - ./metric_sim_dashboard.json:/var/lib/grafana/dashboards/metric_sim_dashboard.json
      - ./dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - ELASTIC_PASSWORD="a123456"
      - ES_JAVA_OPTS=-Des.logger.level=warn
      - action.auto_create_index=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.license.self_generated.type=basic
    networks:
      - monitoring-net

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.15
    ports:
      - "8363:8363"
    volumes:
      - ./logstash.conf:/usr/share/logstash/config/logstash.conf
    networks:
      - monitoring-net
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
    ulimits:
      nproc: 1000
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - monitoring-net
    depends_on:
      elasticsearch:
        condition: service_healthy

networks:
  monitoring-net:
    driver: bridge
